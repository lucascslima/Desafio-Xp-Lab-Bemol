# -*- coding: utf-8 -*-
"""Desafio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y8hjo9cQW2mqWcpMKVI5J3dfMlc2wpJ3
"""

import pandas as pd

"""# Leitura de arquivos"""

# Dataframe das vendas
df_vendas = pd.read_csv('vendas.csv', sep = '|', skiprows = 0, encoding='utf-8')

# Vendas total AM
df_detalhamentoAM = pd.read_excel('detalhamento.xlsx', sheet_name='AM',skiprows=1)

# Vendas total RR
df_detalhamentoRR = pd.read_excel('detalhamento.xlsx', sheet_name='RR',skiprows=1)

# Vendas total RO
df_detalhamentoRO = pd.read_excel('detalhamento.xlsx', sheet_name='RO',skiprows=1)

# Vendas total AC
df_detalhamentoAC = pd.read_excel('detalhamento.xlsx', sheet_name='AC',skiprows=1)

"""# Tratamento de dados

## Renomear colunas
"""

df_detalhamentoAM.columns = ['nome_fantasia', 'escritorio', 'uf', 'operadora', 'valor_bruto']

df_detalhamentoRR.columns = ['nome_fantasia', 'escritorio', 'uf', 'operadora', 'valor_bruto']

df_detalhamentoRO.columns = ['nome_fantasia', 'escritorio', 'uf', 'operadora', 'valor_bruto']

df_detalhamentoAC.columns = ['nome_fantasia', 'escritorio', 'uf', 'operadora', 'valor_bruto']

#Concatenando tabelas de detalhamento

df_detalhamento = pd.concat([df_detalhamentoAM, df_detalhamentoRR, df_detalhamentoRO, df_detalhamentoAC])

df_vendas.columns = ['escritorio', 'operadora', 'material', 'data', 'banco_dados']

"""## Verificar tipos"""

df_detalhamento.dtypes

df_vendas.dtypes

"""## Deletar dados"""

df_vendas = df_vendas[['escritorio', 'operadora', 'banco_dados']].copy()

df_detalhamento = df_detalhamento[['escritorio', 'operadora', 'valor_bruto']]

"""## Resetando o index"""

#Eliminando o index

df_detalhamento = df_detalhamento.reset_index(drop=True)

"""## Agrupando dados"""

df_vendas = df_vendas.groupby(['escritorio', 'operadora']).agg({'banco_dados':'sum'}).reset_index(drop=False)

"""# Correlação de tabelas"""

df_relatorio = pd.merge(df_vendas, df_detalhamento, on = ['escritorio', 'operadora'], how = 'left')

"""# Regra de negócio"""

def valor_diferentes(banco_dados, valor_bruto):
  if banco_dados != valor_bruto:
    return 'alerta'
  else:
    return ''

df_relatorio['divergente']= df_relatorio.apply(lambda row: valor_diferentes(row['banco_dados'], row['valor_bruto']), axis = 'columns')

"""## Ordenando colunas"""

df_relatorio = df_relatorio.sort_values(['escritorio'], ascending = [True])

"""# Exportando formato .XLSX"""

writer = pd.ExcelWriter('Relatorio Final (Desafio).xlsx')

df_relatorio.to_excel(writer, sheet_name = 'comparação', index = False)
writer.save()

df_relatorio